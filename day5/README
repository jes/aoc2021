My computer doesn't have enough memory to process all of the input in
one go, even if we use a hash table as a "sparse 2d array".

So my next plan was to iterate over every pair of lines and only plot
the intersections in the sparse 2d array, but that was going to take
too many hours to complete.

Ben suggested splitting the input into smaller grids and processing them
individually. This is a great idea.

So I wrote a program to split the input into 3x3 subgrids and then tried
to solve these individually. It still ran out of memory because it's still
too large.

My kernel doesn't give you enough file descriptors to open more than about
10 files at a time, so the solution is to do a first pass that splits the
input into 3x3 subgrids, and then run a 2nd pass over each of the subgrids
splitting them into a further 3x3 subgrids, for 9x9 subgrids overall,
and then run part1 and part2 over each subgrid consecutively. This works
but it took me at least 6 hours of work.

There's no video today because it was so chaotic and time-consuming.
